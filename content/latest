<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>notech.ie</title>
</head><body>
<h1>notech.ie</h1>
<ul>
<li><a href="#efficiency">/efficiency</a> is not needed when things are simple.</li>
<li><a href="#challenges">/challenges</a> talks about a specific challenge i want to create at some point.</li>
<li><a href="#hierarchies">/hierarchies</a> should be shallow.</li>
<li><a href="#money">/money</a> should not be society's supporting pillar.</li>
</ul>

<h2 id="efficiency">efficiency</h2>
<p>
it is very easy for me to fall into the trap of obsessing about efficiency.
efficiency can mean many things: in software i might be optimizing for minimal
ram usage, minimal time use, or in real world i might be optimizing to spend as
little money as possible. however achieving peak efficiency has downsides. the
principle of pareto efficiency suggests that the more efficient i make
something, i lose optimality in other dimensions. the principle introduces the
concept of pareto frontier: when i am on the frontier any improvement in my
preferred dimension will result in decline in some other dimension. examples:
</p>

<ul><li>
  i want my software to use very little memory. but to achieve this i would need
  to use very complex data structures and thus maintaing the software would be a
  nightmare.
</li><li>
  i am a baker and i want to bake bread as cheap as possible. therefore i will
  look for the cheapest flour possible. but such flour makes my bread taste and
  smell bad. i compensate by adding even more cheap additives. now i am not
  selling bread anymore just a bread-like hodgepodge.
</li><li>
  i want to commute to work in minimal time possible. so i take a bike instead
  of walking. but now i have to bike next to the traffic and as such it is super
  stressful. i am exposing myself to a lot of stress in exchange of less time.
</li>
</ul>

<p>
i am not saying that i should embrace inefficiency but rather just to avoid the
obsession to be at the frontier. it is much easier to adapt to the changing
world when i have a lot of wiggle room. this leads me to the next question: why
the obsession about the efficiency?
</p>

<p>
suppose i am a big company. i make 100 million dollars yearly. if i hire a
person that can make 1% improvement to my processes then that means i can now
make 101 million dollars yearly. that is 1 million dollars worth of extra money
in exchange for one person&apos;s salary. sure, it adds complexity to my processes
but that person can deal with it so it is a sound tradeoff.
</p>

<p>
other examples: i am a farmer and improving crop efficiency means i can feed
more people. or improving fuel efficiency means less pollution. in many the
other cases like these the benefits do outweigh the downsides. but it is
important to be aware of those downsides.
</p>

<p>
the common theme i see is that efficiency starts to matter mostly in large
systems where even the smallest improvements lead to large, quantifiable
differences. the same system can also afford the kafkaesque complexity stemming
from all the small efficiency &quot;improvements&quot;. but when other people try to use
or rely on the output of that system then they are inadvertently exposed to the
risks stemming from all that complexity.
</p>

<ul><li>
  in the software&apos;s case i would get giant, unmaintainable codebases. i would be
  discouraged to even attempt fixing bugs in software because i do not know
  where to even start or my machine is not powerful to build the software in
  question.
</li><li>
  in the crops case i might get more confident about my farming abilities and
  start growing a single plant with great efficiency. the risk here is that a
  lot of people might start depending on me solely. if some unforeseen problem
  arises with my plant and i lose a year&apos;s worth of crop that will expose all
  those people to huge amount of risk. in the case where i am forced to keep a
  large variety of plants with various successes it would keep people&apos;s
  expectations in check.
</li><li>
  or take the fuel efficiency example: it means that more people can afford
  personal cars, less pollution means less people will be advocating against
  cars, which means there is the chance that there will be a demand for even
  more cars and in total there will be more pollution by making all those cars.
</li>
</ul>

<p>
although i enjoy the efficiencies of the modern world but when it comes to my
own projects, i stopped caring about efficiency and optimality. my new focus is
to not let things grow unbounded. i set arbitrary limits on myself or on the
software i write and i adhere to them. when i reach a limit somewhere, i take a
deep look to see if i can solve the problem in a different way so that i do not
need to increase the limit. this approach lets me avoid being stuck in some
local minima and reach much higher efficiencies in total. for example if i have
a simple software that only solves 80% of my usecase, i will try changing my
usecase rather than grabbing a more complex software. usually my environment
gets simpler in exchange. for instance if all i want to have a blog with some
text in it, i can just write simple text files rather than html or other
complicated markup that needs various postprocessing before i can serve them.
this way i do not need to deal with fonts, css, hyperlinks and whatnot. only the
important bit, the text itself, remains. and most important observation from
this is that when i avoid the unnecessary fluff, things get miraculously
efficient. for instance this website loads quite fast without any effort on my
side. no need to set up compression or use fancy protocols to make it fast.
</p>

<p>
i am pretty sure the efficiency stemming from limits extends to other cases too.
if we did not have that much cars available, people would be more dependent on
public transportation so the planet in total would be more efficient. or if less
food would be available, we would have also less waste so probably we would try
to be more conscious about food. of course we would have harder, less convenient
life but potentially more efficient in exchange. this might not sound appealing
for everyone but i think applying some limits on ourselves might get us some
improvements and efficiencies in exchange without an explicit focus on
efficiency itself.
</p>

<h2 id="challenges">challenges</h2>
<p>
i really liked puzzles and challenges as a kid. i participated in programming
competitions and some easier math ones as well. the problem with competitions
was that whenever i lost, i felt quite sad. especially if the competition had a
form of direct elimination. e.g. if i was not in the top n then i did not pass
to the next round. when i was eliminated then i felt dumb, i was not part of the
&quot;elite&quot;, i did not have the &quot;smarts&quot; to enter the next round. it was a very
discouraging feeling. however winning such competitions was an awesome feeling.
i felt proud of myself and even got prizes to boot.
</p>

<p>
interestingly, i had similar feelings about school exams. there too i felt the
dread and stress of failure. it might have been even worse a bit because even
though the bar was lower, the stakes were higher: if i fail, bad things will
happen to me. e.g. i get exposed to even more exams unvoluntarily. i tried to
ignore grades but i did felt pressure for good grades. so bad grades also made
me sad.
</p>

<p>
another frustrating part of these exercises is their randomness factor. i never
knew what to expect. especially bad were the ones where the examiner gave me a
random subject and then i had to talk just about that subject. what fascinates
me is that in such cases i always managed to get a subject i happened to know.
as my studies progressed, i even started to rely on this more and more and learn
less and less. this was very risky, yet my luck persisted.
</p>

<p>
now that school is over, i am no longer subject to these experiences. i miss
them a bit though. it is not the dread and stress i miss. it is not even the
sense of achievement i miss. if that would be the case then just competing and
succeeding in online programming competitions would give me the same dopamine
shot i am missing. yet they do not. i tried doing them but i simply did not have
the same motivation. i did not find them that much interesting. i do not think i
just &quot;grew up&quot;. i sort of feel the same as i was a kid. it is just my
environment and my interaction with it that completely changed. however if i
would get back into the same environment, i would probably enjoy the same things
as i enjoyed as a kid.
</p>

<p>
my childhood competitions and exams were in an environment of friends and
family. these people knew whenever i attended these exams and competitions. they
always asked about the results. when i got good results, i felt good about
myself because i understood that it meant something for these people. they might
have felt proud of me. i never bragged though. i just let people be naturally
curious (where were you yesterday?) and ask questions (oh really? how did you
fare?). i never liked to talk about myself so i tried to dismiss questions but
after enough nagging or some other ways (e.g. teacher announcing everyone&apos;s
results) people found out. i had this &quot;thing&quot; where i preferred that people find
out stuff about me from other ways than me talking about it. maybe this is a
form of signal that said person was so interested in me that they looked up or
asked information about me, remembered it and then asked me about it. a sort of
honest, non-fakeable flattery. it felt good. i guess i am a narcissist. but i am
digressing.
</p>

<p>
so achievements of exams and competitions felt good because i felt that i
impressed nearby friends and family. it was important that i impressed people i
knew. impressing strangers is boring. i mean just compare the following two
statements: &quot;a random korean guy won a starcraft competition&quot; vs &quot;your friend
won the bowling nationals&quot;. which one is more exciting? the latter excites me
more because then i want my friend to talk about it. the former i just simply do
not care about. now that i grew up, it is very hard to impress people, i do not
usually get such feedback. if i had some friends with whom i would continue to
do programming competitions, i think i would find it fun. but i am not a person
with many friends. it is not that people run away from me, it is more that i do
not even try acquire or meet people. anyways, digressing again.
</p>

<p>
even though this game is over for me, it does not mean i cannot create an
environment where people can acquire such experiences. however if i am going to
do this, i want to remove the elements of dread, stress, randomness, lost
opportunities and so on. at some point in my life (maybe when i am retired) i
would like to try creating a particular &quot;challenge&quot;. let me describe the rules
and then i will explain why i like the idea:
</p>

<ul><li>
  the challenge is to write a piece of software (solving a random collection of
  problems, e.g. given graph find shortest path, string manipulation, etc, stuff
  that i can easily verify).
</li><li>
  the challenge is static, never changes.
</li><li>
  the challenge is online, one can practice for it any way they wish.
</li><li>
  the taker must solve the challenge in barebones c programming language. the
  taker cannot even use the standard library (i provide a read and write
  function).
</li><li>
  the taker can attempt the challenge once every 3 months and it is free of
  charge.
</li><li>
  the takers must come to my house and use my restricted environment to take the
  challenge while i observe them so that they do not cheat.
</li><li>
  before attempting the challenge, the taker must send a fully correct solution
  to me. i need this to avoid situations where people come to me without any
  hopes to finish the challenge.
</li><li>
  at least one week before the first attempt, the taker must come to my house
  and do an exercise run. this ensures that the test takers are aware of the
  challenge&apos;s environment and gives me a way to become friends before i take on
  my adversial position as the challenge&apos;s proctor.
</li><li>
  the taker cannot use any helper material to complete the challenge other than
  the crappy computer i provide. not even a handwritten post-it note. i do
  provide a pen and paper for writing notes from scratch.
</li><li>
  the taker has 4 hours to complete the challenge. once they finish, i test
  their code and tell them if they passed or not. no bathroom breaks, drinking
  or anything allowed during those 4 hours (unless medical reasons).
</li><li>
  upon successfully completing the challenge, the taker&apos;s name will appear in
  the challenge&apos;s hall of fame. there would be also prices for the completers
  although age limited (e.g. prices only for &lt;= 16 years old). giving chocolate
  or something to middle aged people for completing a coding challenge seems
  weird.
</li>
</ul>

<p>
i have not fully thought out the challenge but i think those rules achieve most
of the features i want the challenge to have. here are my reasons why i would
like this challenge as a taker:
</p>

<ul><li>
  i know what the challenge asks. i know if i am prepared for the challenge or
  not. i do not need to stress about &quot;what are they going to ask me?&quot;.
</li><li>
  the challenge&apos;s result does not depend on other people. if i pass, i am on the
  hall of fame regardless of others.
</li><li>
  the programming environment is very simple, very equalizing. since i cannot
  use the standard library, i know that i do not need to stress about memorizing
  the parameter order of qsort. i just need to learn qsort itself. maybe it is
  harder but i feel better if i know qsort&apos;s algorithm rather than just the
  argument order.
</li><li>
  because i can retry in short period of time, the failure is not a big deal.
  there are no limits on the amount of retries. i can keep trying until i
  succeed. and whether i succeed or not, depends only on my willpower, i do not
  lose anything even if it takes me 5 years to succeed.
</li><li>
  since there is a cooldown period between attempts, i have a chance to really
  think through my next attempt rather than just brute forcing through the
  challenge.
</li><li>
  since the challenge occurs in a very controlled environment, i know that every
  member of the hall of fame went through the same process as i did. i know
  there are no cheaters among them, and i know that others also know that i
  cannot be a cheater.
</li><li>
  the challenge is geographically limited so it is not something anybody can do.
  the hall of fame will not be filled with random people all around the world
  that i cannot possibly know. in fact since only close people can do it
  (especially thanks to the silly 1 week exercise run), it is highly likely that
  the people on the hall of the fame are people i can befriend or just go and
  visit. then i can ask for their advice. doing this in the real world rather
  than through anonymous online discussions is much more satisfying. even if i
  communicate via email, just knowing that the other side is near me makes
  things more satisfying.
</li><li>
  since the challenge does not allow any helping tools or materials, all i can
  fall back to is myself. there is no greater equalizer than stripping ourselves
  from our tools and resources. this way i know that all the hall of fame
  members all only used only their minds. i do not need to stress whether i have
  the best books with me or not, or whether my notes contain everything or not.
  it is just me and the challenge.
</li><li>
  4 hours is limit i need to work with. it is something to which i have to adapt
  my bodily functions. i feel i need to urinate in a higher frequency, well, i
  have all the more motivation to work faster.
</li><li>
  once i finish the challenge, i appear on the hall of the fame. if the
  challenge is hard enough so that only a few people are on it, then randomly
  meeting my fellow hall of famers at some random future point is a great
  bonding opportunity. i now immediately have a common topic i can rant about
  and ask the other person&apos;s experience of the challenge. it is also a nice
  feeling if my non-programming peers find it and then start asking about it.
</li><li>
  there is one perverse incentive with the age limited prices. maybe the price
  is a bike that the kids do not really need since they sit at home all day
  long. even if i cannot get the price anymore directly, i could still strike a
  deal with kids that i will prepare them for the challenge in exchange they
  give up the price (or a portion of the price) for me. this way i would have an
  incentive to train the next generation for the challenge.
</li>
</ul>

<p>
so that would be my idea. the challenge itself is not very practical. but i do
not think everything in life must be strictly practical. it is a game. no need
to play if it does not sound interesting.
</p>

<p>
ideally when i retire, i will do so in a small city and could run such a
challenge from my home mostly for the nearby kids. maybe i could present
multiple challenges with varying difficulties and then advertise the challenge
in the local school. it would be completely optional, i would not expect too
many kids to try. however i can play with the prizes. if nobody attempts, i can
just keep raising the prize until a few kids get so obsessed with it that they
will start training for the challenge. it is an easy way to get some people
motivated to do something i want. there is not much point to this other than
getting onto the hall of fame. however if they manage to get there, they might
get interested in other, more mature competitions and this might kickstart their
interest in computer science.
</p>

<p>
since i think i would be pretty comfortable with such challenges, i wonder if
similar conditions could apply to school exams. i could split school exams into
two categories: the mandatory exams and the extracurricular exams. both types
would be binary: pass or fail. there is no grading. however there would be no
punishment for failing. they could just retry 3 months later. the mandatory
exams would be super basic: it is just to confirm that they can read, write,
count, know the basics of ethics (do not hurt others), know some basic stuff
about everyday life (monetary skills like avoiding credit or the concept of
interest rates), some basic life skills (cooking an egg). the extracurricular
exams would be about history, algebra, literature, programming, sewing, cooking,
woodworking and others (each subject would have multiple exams with varying
difficulties). kids could do the exams any time they want, in any order (as long
as they take at least 1 each month for instance). the nice thing is that then
the kids can direct their knowledge intake as they wish. if they do not have
preference, others can suggest them exams to take. the learning part of the
studies is left to the kids to figure out. sure, they can attend classes but if
they feel they can go faster than the rest, they can just take the exams sooner
and not bother with the classes. and just to make sure kids have an incentive
for collaborating, they could have random study groups where all members have to
pass a specific exam. the study group members now have to branch out subjects
outside their interest. if a member is not interested in the subject at all, the
other study group members must somehow work with the disinterested kid to
convince and teach the kid about the subject for the greater good. they have to
do so because the rule would be to not allow the study members take more exams
until they get everyone on their group to pass the random exam. anyways, i am
just rambling random ideas. the point is, rather than forcing a very strict
curriculum and punishing failure, i would much prefer to give more choice for
kids to pursue education in the areas they like and at the pace they want, have
easier and less stressful exams (they are kids afterall) and avoid punishment
for failing exams but rather teach to keep trying, regardless of failures.
</p>

<h2 id="hierarchies">hierarchies</h2>
<p>
file hierarchies are an effective way to organize a large set of documents,
like, source code trees, personal files, photos or music collections. however i
often see quite deep hierarchies for these files. i think that is a bad idea.
the nesting should be quite shallow. most projects or organizations do not need
more than 2 levels. anything on top of that probably is not adding a lot of
value and is just making it harder to navigate said files.
</p>

<p>
if i need more than two levels then chances are i am better off with some sort
of database to categorize the files. let me take the hypothetical example of
organizing photos into a directory structure. you might start out with a
structure like this:
</p>

<pre>
 photos/[year]/[name of the event]/[device]/0001.jpg ... 9999.jpg
</pre>

<p>
so when i go skying and make one photo with a phone then two photos with a
camera, i would have these three files:
</p>

<pre>
 photos/2018/skying/phone/0001.jpg
 photos/2018/skying/camera/0001.jpg
 photos/2018/skying/camera/0002.jpg
</pre>

<p>
but would such organization give me any value? whenever i organize something
into directory, i ask myself: will i ever do an operation on all the files under
this directory but not on others? if the answer is no, then clearly i do not
need the extra directory. if the answer &quot;all the time&quot;, then a directory is a
good choice for the organization. if the answer is &quot;sometimes&quot; then it is a
tradeoff. how much annoyance am i adding to my day to day life by putting this
under a directory? i will need extra keypresses, clicks and mental effort
whenever i want to navigate to a set of pictures. it is a small extra cost but
over time it adds up so it is worth to consider.
</p>

<p>
in the above example i do not think that organizing based on the device matters
at all. why should care what device i used after 10 years? i probably long
forgotten about them. so i would get rid of the device directory. on the other
hand the name of the event does matter. i might often want to check out a
specific event i feel nostalgic about. the year is a bit trickier. i probably
will not care about it 99% of the times. i occasionally might want check what
events happened in a specific year but i do not think that i should organize my
files according to that use case. so in this case my structure would look like
this:
</p>

<pre>
 photos/[name of the event]/[timestamp].jpg
</pre>

<p>
so the listing of those 3 files would be the following:
</p>

<pre>
 photos/firstskying/20180112223456.jpg
 photos/firstskying/20180113144455.jpg
 photos/firstskying/20180113144523.jpg
</pre>

<p>
notice that since i can no longer rely on year to separate similar event, i had
to change the name of the event to something more memorable. i went for
&quot;firstskying&quot; in this example since it could represent the photos from my first
skying vacation. on linux i can still easily look up what vacations i went in a
specific year:
</p>

<pre>
 $ ls photos/*/2018* | cut -d2 -f2 | sort -u
</pre>

<p>
and the common task of &quot;look at all the photos from an event&quot; is also very easy:
</p>

<pre>
 $ [pictureapp] photos/firstskying/*
</pre>

<p>
if i were very fancy, i could even add additional tags to the photos (e.g. the
device that made the photo) and store all that in a lightweight database. then i
can use a rich query language to get a list of files for arbitrary conditions.
this solution still does not require directories and easily scales to arbitrary
number of tag types. suppose i add some tags to each photo and then store that
it a text file like this:
</p>

<pre>
 $ cat photodb
 photos/firstskying/20180112223456.jpg night friday phone skying ...
 photos/firstskying/20180113144455.jpg day saturday camera skying ...
 photos/firstskying/20180113144523.jpg day saturday camera skying ...
</pre>

<p>
then it is very easy to query for specific tags and then display just those.
e.g. i remember that i have a funny photo from one of the skying events that
happened on a friday night. then i can search for it like this:
</p>

<pre>
 [pictureapp] $(grep skying photodb | grep friday | grep night | cut -d&apos; &apos; -f1)
</pre>

<p>
probably i could make this a lot smarter and easier to use but the point stands
that if i have lots of documents, then i should not use the directory hierarchy
to over-organize them but rather use a specialized organizing tool or database.
</p>

<p>
in this example i went from 3 levels to 1 level. i find the one level
organization more helpful. it is much simpler, memorable and more accessible.
all it required is some active thought about organization.
</p>

<p>
reorganizing multi-person projects is a little bit trickier though. as an
individual project member i probably do not have a good insight how others use
the project. however we can use conway&apos;s law to help us. it states the
following:
</p>

<ul><li>
  organizations which design systems ... are constrained to produce designs
  which are copies of the communication structures of these organizations.
</li>
</ul>

<p>
at first it sounds as something bad. but when i thought a little bit more about
this, i think this law is something i should embrace rather than work against.
suppose i have a news site and i want to track its source and content in a
monolithic version control system. this might be the hypothetical history of the
company:
</p>

<ul><li>
  i hire programmers to build an awesome webserver. they work under the
  /webserver directory.
</li><li>
  when the webserver is ready, they also write some scripts to run it. to not
  mix code and scripts, they split the files into /webserver/code and
  /webserver/scripts.
</li><li>
  over time running that awesome webserver turns out to be a lot of work, so i
  hire sysadmins to keep it up. these sysadmins also want to monitor the website
  so they split the scripts into /webserver/scripts/runscripts and
  /webserver/scripts/monitoring.
</li><li>
  i hire writers to write some content. they put their content under /content.
</li><li>
  i want the website to look fancy so i hire some ui designers who put their
  stuff under /webserver/frontend.
</li>
</ul>

<p>
so i ended up with this hierarchy:
</p>

<ul><li>
  /content
</li><li>
  /webserver/code
</li><li>
  /webserver/frontend
</li><li>
  /webserver/scripts/runscripts
</li><li>
  /webserver/scripts/monitoring
</li>
</ul>

<p>
with such a hierarchy a significant portion of the project members have to deal
with the /webserver prefix daily completely unnecessary. so instead of
subdividing the project among the lines what sounds logical, i would divide it
along the team boundaries. that is what conway&apos;s law suggests if i twist it hard
enough. so i would have this:
</p>

<ul><li>
  /content
</li><li>
  /frontend
</li><li>
  /scripts/runscripts
</li><li>
  /scripts/monitoring
</li><li>
  /webserver
</li>
</ul>

<p>
each team has its own top level directory under which they can do anything they
wish. most teams do not suffer the unnecessary burden of extra hierarchy. in
such situation if i get annoyed with an overly long path, it is only my team who
i need to convince to refactor the files. the changes under my team&apos;s directory
would not affect other teams too much. i can freely create directories under my
team&apos;s name, i do not need to concern about the fact whether it sounds logical
or not, or seek approvals from other teams. the hierarchy is not really getting
into my way, it is just a tool to divide the land of the shared file tree.
</p>

<p>
this approach leads to a very shallow directories with many entries. that sounds
like a nightmare to manage. but once i am over the initial shock, i actually
find it very efficient. i do not spend ages contemplating whether i should put
the logger.c file under the code/util directory or the code/system directory.
and i do not need remember where i put it either. if i am looking for it, i can
just do a &quot;ls *log*&quot; and find it quite quickly. no need for fancy recursive
searching.
</p>

<p>
a word of warning. i think symlinks should be avoided if possible. there is a
lot of value of every file having a unique path to it. if i start using
symlinks, i might start referring to some files through the symlink and that
would lead to bad habits. having unique paths to files makes referring to the
files clearer. if i use a symlink, i really want it to be obvious. maybe its
name should contain the fact that the file is a symlink, e.g. a .lnk extension.
this way there will be less confusion about the canonicality of a file. it will
be obvious from &quot;/runscripts.lnk/start.sh&quot; that this start.sh does not belong to
a &quot;runscripts&quot; team, it is just a shortened filename.
</p>

<p>
benefits of shallow hierarchies is not restricted to filesystems only. url
structures for websites should be quite shallow too. if i were to operate an
online store then i would keep my products at urls like myshop.com/1234578.
non-numbers would trigger searches. e.g. myshop.com/leather+shoe would search
for leather shoes. i think that is more usable than a url like
myshop.com/search?lang=en&amp;location=us&amp;num=20&amp;query=leather+shoes. the former is
easily to remember and share while the latter is a nightmare. i could type out
shareable links for that site without even needing to visit my url to verify
because its structure so simple. you can still create custom, non-search pages
if you put a slash at the end to indicate you are not trying to search. e.g.
myshop.com/login/ could go to the login page without confusing it with a search
query.
</p>

<p>
to sum all the above up: i prefer shallower directory structures because once i
am familiar with the environment, shallow structures make navigation easier for
me. if i find the shallow structure hard to navigate, i try to use a search tool
instead of making overly deep, hierarchical structures.
</p>

<h2 id="money">money</h2>
<p>
money can be practical tool or a cause of big stress in life. it depends how
much you have. have less than what you need then you are causing problems to
yourself, having more than you need then you are making your future self
happier. it would be nicer if the stressing part could go away. does humanity
even need money? as a kid, i did not really need it. my family provided for
everything. even neighbors, relatives often brought gifts or cooked food without
expecting anything in return. i only needed money when i was interacting with
strangers. those strangers did not know me, did not trust me so they needed an
alternative way of giving their goods without feeling bad about themselves. so i
used money there. i guess i could say money is an alternative to trust. it is
not as powerful but still, a simple, one dimensional tool. however i much
preferred the world where things were not reduced to this one dimension. in fact
if i am doing a small favor to someone, i refuse to accept money. that would
just convert this rich sense of trust i acquired into numbers. i would rather
keep the trust than the money. often it is unclear how much money should actions
convert into. even if you assign a value, it changes over time. in the meantime
trust remains constant.
</p>

<p>
i often wonder if such moneyless living is still possible in adulthood. i could
imagine a community of people who live together and agree to share the costs of
living in exchange to not deal with the costs individually. for instance this
group of people might live in a large, multi bedroom shared house with a single,
shared bank account. each person makes a periodic fixed contribution to the bank
account. then the &quot;finance person&quot; pays the bills and rents from that said bank
account. the kitchen is also shared and somebody always fills it up from the
shared bank account. somebody might cook something nice for everybody every day.
maybe group would share bus passes, swimming pool passes or access rights to
other luxuries. the point is that the everyday life does not depend money. the
community members do not need to take their your purse or credit card for rents,
bills or food. that would be quite nice way of living. i am prone to obsess
about spending. i see almost all spending of mine as some sort of inefficiency
and then i start researching and thinking how can i optimize my behavior so that
my spending goes nearer to zero. however if i do not see the bills, i do fine,
blissfully ignorant. the missus already learned that she is better off if she
hides the bills away from me.
</p>

<p>
such shared living does not scale infinitely though. to maintain harmony all
members have to be in sync with each other. they have to have shared values,
house rules and matching personality. maybe it scales up to a dozen of people
tops although i think 4 adults is about the ideal number. finding the right
people is really important. i lived in a few environments and i learned that if
i leave my roommates or living mates up to chance, i will not like it. however
if i pick people i like, it actually enhances my quality of life compared to
living alone or just with a partner. i am really conscious how my words affect
other people so i usually withdraw from conversations just to be safe. i just
listen to others talk. however if i know every person well enough in my
immediate vicinity, i feel more free to talk. so living among friends gives more
opportunity for idle chit chat and other activities which can often be quite
entertaining and fun that i otherwise would not enjoy among strangers or other
acquaintances. the problem is i have not found a good way to easily find the
right people. but that and shared living is a different can of worms.
</p>

<p>
in such arrangements i do not need to think about buying my own food anymore. if
kitchen is always stocked, i can grab some food from there anytime. no more
obsessing about bills. i outsourced my worries to &quot;my tribe&quot;. even if i am
thinking about an expensive purchase of a luxury, like buying a used fixie bike
because i suddenly want to go on a bike tour, i can ask the help of my tribe.
they can verify if this is a sane reason for spending the money, and if so they
can help me with the purchase. they can help negotiate prices, do the financial
transactions and so on. i do not even have to personally think about money. i
trade with trust within my tribe members and on a higher level the tribes trade
with money between each other.
</p>

<p>
maybe a very limited form of the above thoughts could scale up to a larger
community as well. imagine a small but densely occupied town. this town could
have provide cheap free food for whoever that wants it (within limits, e.g. you
have eat everything right at serving). if it serves cheap porridge or just stale
bread every day, that is fine too. maybe it could even have a nearby facility
with clean water and warm rooms. maybe even allow sleeping there. think of
nothing fancy, just mattresses on the floor, rooms perhaps shared with others.
the barest minimum to satisfy the lowest level in the maslow&apos;s hierarchy of
needs. i think keeping up such a facility would not cost a lot of money. most of
the cost would go into the salaries of people running the facility. and probably
nobody would want to use such facilities willingly (i guess i would be an
exception). however having such facility available would mean that no matter
what you have or not have, simple living is available for everyone for free. i
think having free, no questions asked access to the facilities for the basic
needs should be the marker of advanced society. money, trading and access to
luxuries can come after that. i feel just simply giving a lot of money to people
is less effective way to a prosperous civilization. i am not against it, it is
just i think we should not base our pillars of society on money but rather on
infrastructure. once the latter is in place, money can flow freely. let me
demonstrate on a few examples why i think infrastructure would be a better
solution over the long term:
</p>

<ul><li>
  societal integration between the haves and havenots: with free money i think
  this would just decline. from what i can see, rent in cities keeps growing. if
  the poor people do not have access to subsidized housing, they will be forced
  out of the city. thus cities will only house the rich and elites of humanity.
  i think our society should be inclusive and come up with ways that diverse set
  of people can live together, regardless of their income. the people who want
  isolation are the ones who should move out of the cities.
</li><li>
  motivation: if i have to sleep on an uncomfortable mattress and eat the same
  crappy porridge every day, i would be probably intrinsically motivated to do
  something about it. even the slightest extra income can grant me access to a
  luxury. maybe i can get someone give or pay me a decent lunch if i cut their
  grass. maybe then i will be motivated to go back for that extra income. with
  free money, i can decide to save money by keeping my room&apos;s temperature lower
  and then afford a decent lunch every day but otherwise i can still just stay
  at home and do nothing useful, e.g. writing articles like these. the point is
  that the difference between no job and some job is much larger and thus more
  motivating.
</li><li>
  homelessness: in the free money situation people can still stay homeless if
  they for some reason do not have access to money. i might be visiting a
  different city and i might lose my wallet and phone. now i cannot get
  accomodation. in the free infrastructure scenario it is no big deal. i can
  actually decide to go without the wallet because i can food and a bed for free
  anyways.
</li><li>
  stability: the current monetary system does not look super stable to me.
  people will always argue how much money should i get. and even if i get some
  money, the next day it might become worthless because some rogue algorithm
  messed up the whole financial system. infrastructure sounds a more stable
  proposition. just because new york exploded, does not mean that the porridge
  reserves in my town evaporate into air. i can still rely on receiving food the
  next day.
</li><li>
  system understanding: in my opinion it is important for the members of a
  community to understand how their community works so that they easily help
  out. understanding infrastructure is much easier than understanding the
  financial system. the goal of the infrastructure is to satisfy the needs of
  its users. the problems that can arise are usually technical in nature. if
  there is no water then somebody can go and repair the pipes or get water via
  alternative means. if the rent is too high in a city, people cannot just go
  and make it lower.
</li>
</ul>

<p>
and the ideal way to design such &quot;living infrastructure&quot; is to have the
designers actually live in the infrastructure they designed. they would have an
intrinsic motivation to ensure it works well. i am sure they could come up with
a long list of reasons why it would not suit them but so would anyone else. this
is why this requirement is needed: to design something that actually works.
</p>

<p>
note that i do not advocate against money or even against giving people free
money. i think that is all fine. what i argue for is that one should not require
money just to co-exist happily on this planet. it is useful for trading,
building new things. but humanity should have a minimum standard of living that
is not based on the fictional money but rather on the actual needs of the
planet&apos;s inhabitants. once most people have access to that, money can be seen as
a tool for the extra benefits society provides. until that happens, i will see
money as something to stress about.
</p>
</body></html>
