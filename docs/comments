# comments: i've enabled anonymous commenting on this site.

# summary

- each post allows anonymous comments: no need to provide name or email, just the message.
- there's a 3 minute cooldown between pressing preview and the ability to post the message.
- the site has aggressive ratelimiting, it only accepts a few comments per hour.
- there's a 2k byte length limit on the messages.
- the comment appears immediately after posting.
- i retain the right to moderate / change / delete the messages as i wish.

# markup

the comments support some markup based formatting.
a paragraph's first character determines how it's going to be formatted:

- space to make the text use preformatted monospace, e.g. for code or tables,
- - to use lists; start another line with - for additional elements,
- > for quoting; > is removed from the start of each line,
- # to bold a line, e.g. to highlight the start of a section,
- everything else is formatted normally.

web links are deliberately not supported.
i'm allowed to use them in my comment responses though.

# motivation

one thing i really like on blogs: having the ability to leave a comment.
i like reading some challenging responses to the blog posts.
and sometimes i feel i really want to point something out to the author.
ideally i could do this without dealing with account management and all that.

on the other hand low quality comments can really ruin this section.
i definitely don't want to deal with spammers and low effort comments.
to combat these aspects, i'll open anonymous comments with very heavy limitations.

first, the commenter will need to wait 3 minutes between crafting their message and committing it to my site.
i've talked about this idea in @/cooldown.
i hope that during the cooldown the user will
either not bother posting the message if it's not that important,
or have a chance to review to make it even nicer if needed.
although a change will cost them additional 3 minutes.
i hope only the really important messages get posted here, where the message is definitely worth the 3 minute wait.

i also ratelimit the incoming comments to 1 message per hour.
i don't think anybody will post here as i don't think i have readers
but i definitely don't want to have a firehose of messages even if i have a popular post.
this limit should be fine for my initial experiment.

these limitations will defeat the automated comment spam but won't stop a dedicated attack on my site.
if it comes to that point, i'll just simply kill this experiment.

# implementation

the backing store for the comments is just a @/actionlog file on the blog's host.
it has the following format:

  [unix_millis] comment [postname] "[message]" "[response]"

if someone uploads a message, i just append a line to this logfile.
my server keeps all the comments in memory and serves from there.
and i can edit the file manually to add my responses.
my server will then reload the comments log and serve the updated comments.
easy-peasy.

the markup is quite restrictive but in exchange it's super easy to implement in most languages.
i have the same implementation in both javascript and go:
split the message on "\n\n" and then look at the first character of each paragraph to decide what html tag to wrap it and what additional processing it needs.

and the cooldown part is implemented by the mechanism i proposed at the end of @/cooldown.
when the user presses preview, their browser computes the message's sha2-256 and sends that to my server.
my server responses with a token that was generated by user_hash+secret_salt+current_timestamp.
when the cooldown elapsed and user presses post, the user's browser sends that token along the comment.
the token includes the timestamp so the server can verify that the message was something that the user uploaded before without storing any state for this.

security is not really the point of this.
it's just obscure enough to guard against simple spammer bots and make it not-so-simple to bypass the cooldown.

anyway, comment away!

!pubdate 2022-08-01 2022-08-30
